version: "3"

services:
  telegraf:
    image: cgeoffroy/telegraf
    environment:
      HOST_PROC: /rootfs/proc
      HOST_SYS: /rootfs/sys
    networks:
      - my-net
    volumes:
      - "./telegraf.conf:/telegraf.conf:ro"
      - "/sys:/rootfs/sys:ro"
      - "/proc:/rootfs/proc:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    entrypoint: /bin/sh
    command: -c "sleep 10s && exec /usr/local/bin/telegraf -config /telegraf.conf"

  graphite:
    image: dmoll1974/targets-io-graphite
    ports:
      - "8070:80"
      - "2004:2003"
      - "8125:8125"
    networks:
      - my-net
    volumes:
      - /var/lib/targets-io/graphite/log:/var/log
      - /var/lib/targets-io/graphite/storage:/opt/graphite/storage

  influxdb:
    image: influxdb
    ports:
      - "8086:8086"
      - "2003:2003"
    environment:
      INFLUXDB_ADMIN_ENABLED: "true"
      INFLUXDB_GRAPHITE_ENABLED: "true"
    networks:
      - my-net
    volumes:
      - "./influxdb.conf:/etc/influxdb/influxdb.conf:ro"

  grafana:
    image: "grafana/grafana"
    depends_on:
      - influxdb
      - prometheus
      - graphite
    environment:
      GF_SECURITY_ADMIN_USER: foobar
      GF_SECURITY_ADMIN_PASSWORD: foobar
      GF_SERVER_ROOT_URL: "http://localhost:4000"
    ports:
      - "4000:3000"
    networks:
      - my-net

  bootstrap:
    image: "alpine:latest"
    depends_on:
      - grafana
      - influxdb
    volumes:
      - "./bootstrap.sh:/bootstrap.sh:ro"
      - "./system.json:/system.json:ro"
      - "./prometheus-docker-dashboard.json:/prometheus-docker-dashboard.json:ro"
      - "./gatling.json:/gatling.json:ro"
      - "./graphite.json:/graphite.json:ro"
    networks:
      - my-net
    command: /bootstrap.sh

  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml:ro"
      - "prometheus_data:/prometheus"
    networks:
      - my-net
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    expose:
      - 9090
    ports:
      - 9090:9090
    depends_on:
      - cadvisor

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - my-net
    command: '--path.procfs=/host/proc --path.sysfs=/host/sys --collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)" --collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    expose:
      - 9100

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - my-net
    expose:
      - 8080

  # jenkins:
  #   image: dmoll1974/targets-io-jenkins
  #   ports:
  #   - "8080:8080"
  #   - "50000:50000"
  #   networks:
  #     - my-net
  #   depends_on:
  #   - mean
  #   - influxdb

  mongo:
    image: mongo:3.0
    ports:
    - "27017:27017"
    volumes:
    - /var/lib/targets-io/mongo:/data/db
    networks:
      - my-net

  mean:
    image: dmoll1974/targets-io-demo-meanjs
    ports:
    - "3333:3000"
    command: dockerize -wait tcp://mongo:27017
    networks:
      - my-net
    depends_on:
    - mongo
    - influxdb
    environment:
      DB_1_PORT_27017_TCP_ADDR: "mongo:27017"

networks:
  my-net:
    driver: bridge

volumes:
  prometheus_data: 
   
